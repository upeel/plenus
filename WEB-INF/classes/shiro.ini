#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]
listener = org.apache.shiro.config.event.LoggingBeanEventListener

contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory 
contextFactory.url = ldap://192.168.1.10:389
#contextFactory.systemUsername =
#contextFactory.systemPassword =
#contextFactory.environment[java.naming.security.protocol] = ssl 

ldaprealm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm 
ldaprealm.ldapContextFactory = $contextFactory 
ldaprealm.searchBase = "dc=BM,dc=local"

# replace form authentication filter with verbose filter
authc = com.bizmann.product.controller.BizmannFormAuthenticationFilter
# request parameter with login error information - if not present filter assumes 'shiroLoginFailure'
# authc.failureKeyAttribute=BizmannLoginFailure

authc.loginUrl = /login.jsp

# name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = txtLoginID
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = txtPassword
# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
authc.rememberMeParam = chkRememberMe
 
user.loginUrl = /login.jsp

# redirect after successful login
authc.successUrl = /main/work.jsp

# redirect to an error page if user does not have access rights
roles.unauthorizedUrl = /accessdenied.jsp

# We need to set the cipherKey, if you want the rememberMe cookie to work after restarting or on multiple nodes.
# YOU MUST SET THIS TO A UNIQUE STRING
securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealm.permissionsLookupEnabled=false
# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"
jdbcRealm.authenticationQuery = select password from diy_user where loginid = ? and is_deleted = 0
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = SELECT name FROM diy_designation WHERE id IN (SELECT designation_id FROM diy_useroudesignation WHERE user_id IN (SELECT id FROM diy_user WHERE loginid =?));

#MS SQL Data Source
ds = com.bizmann.product.controller.BizmannShiroDataSourceFactoryMSSQL

#MY SQL Data Source
#ds = com.bizmann.product.controller.BizmannShiroDataSourceFactoryMYSQL

ds.serverName = values will be from poiconfig.properties
ds.user = values will be from poiconfig.properties
ds.password = values will be from poiconfig.properties
ds.databaseName = values will be from poiconfig.properties

jdbcRealm.dataSource = $ds

bizmannMatcher = com.bizmann.product.controller.BizmannCredentialsMatcher
jdbcRealm.credentialsMatcher = $bizmannMatcher

#Authentication Realm
#securityManager.realm = $ldaprealm
securityManager.realm = $jdbcRealm

# SESSION MANAGEMENT #
# sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

# Use the configured native session manager:
# securityManager.sessionManager = $sessionManager

# 3,600,000 milliseconds = 1 hour
# securityManager.sessionManager.globalSessionTimeout = 3600000

# CACHE MANAGEMENT #
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager


[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
# force ssl for login page
# /login.jsp=ssl[8443],authc
/login.jsp = authc
/logout.jsp = logout
/main/** = user
/admintask/** = user
/externalform/** = user
/GetAttachmentFile = user